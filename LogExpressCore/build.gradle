apply plugin: 'java'
apply plugin: 'distribution'

group 'com.clipsoft'
version = project.hasProperty('version') ? project.version : '0.0.0'

sourceCompatibility = 1.6
compileJava {
    sourceCompatibility=1.6
    targetCompatibility=1.6
}

compileJava.options.encoding = 'UTF-8'
jar {
    manifest {
        attributes 'Implementation-Title': 'LogExpress-core',
                'Implementation-Version': project.version
    }


}

project.jar.exclude('**/*.txt')
project.jar.exclude('**/*.log')
project.jar.exclude('**/*.ini')





sourceSets {
    // JAVA 소스 파일 경로,
    // *Test.java 이름을 갖고 있는 파일은 포함하지 않는다.
    main.java.srcDirs = ['src/main/java']
    main.java.exclude '**/*Test.java'

    // 테스트 JAVA 소스 파일 경로, 자바 파일만 포함.
    test.java.srcDirs = ["src/test/java"]
    test.resources.srcDir  "src/test/resoucres/"
    test.java.include "**/*Test.java"

}

repositories {
    mavenCentral()
}




task clearBuildDir {
    doFirst {
        println 'ClearBuild'
        delete file(project.projectDir.toString() + '/build').getAbsolutePath()


    }

}





project.test.onlyIf { !("true".equalsIgnoreCase(project.getProperties().get("passTest") as String)) }
project.testClasses.onlyIf { !("true".equalsIgnoreCase(project.getProperties().get("passTest") as String)) }
project.processTestResources.onlyIf { !("true".equalsIgnoreCase(project.getProperties().get("passTest") as String)) }
project.compileTestJava.onlyIf { !("true".equalsIgnoreCase(project.getProperties().get("passTest") as String)) }

project.build.dependsOn(project.clearBuildDir)
project.build.mustRunAfter(project.clearBuildDir, project.distTar)



project.build.doLast {



    copy {
        from file(project.projectDir.toString() + '/build/libs')
        into file(rootProject.projectDir.toString() + '/build/libs')
        include '**/*.jar'
    }
}


project.build.doLast {
    file(rootProject.projectDir.toString() + '/build/libs').mkdirs()
    copy {
        from file(project.projectDir.toString() + '/build/libs')
        into file(rootProject.projectDir.toString() + '/build/libs')
        include '**/*.jar'
    }
}





dependencies {


    testImplementation group: 'junit', name: 'junit', version: '4.+'


}